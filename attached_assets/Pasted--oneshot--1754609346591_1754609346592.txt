–í oneshot –º–æ–∂–Ω–æ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç, –∞ –≤—Ç–æ—Ä–æ–π –æ—Ç–∫–ª–æ–Ω—è–ª—Å—è –∏–ª–∏ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–ª—Å—è, –ø–æ–∫–∞ —Å–µ—Å—Å–∏—è –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.
–í multishot –∏ edit –º–æ–∂–Ω–æ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π, –Ω–æ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∏ (–∫–∞–∫ —Å 630 —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏).
–ò–∑–±–µ–∂–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏–∏, –∫–æ–≥–¥–∞ –±–æ—Ç —Å–æ–∑–¥–∞–µ—Ç –¥–≤–∞ Excel-—Ñ–∞–π–ª–∞ –≤ oneshot –∏–∑-–∑–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—Ç–æ—Ä–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞.


–ü—Ä–æ–±–ª–µ–º–∞ –∏ –µ–µ –ø—Ä–∏—á–∏–Ω—ã

–í oneshot –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Ç–æ—Ä–æ–π —Å–∫—Ä–∏–Ω—à–æ—Ç:

–í bot.ts, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ handlePhoto –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –±—ã–ª –ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç –≤ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è —Ä–µ–∂–∏–º–∞ oneshot. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Ç–æ—Ä–æ–π —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä–≤–æ–≥–æ, –±–æ—Ç –º–æ–∂–µ—Ç –Ω–∞—á–∞—Ç—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –µ–≥–æ, —á—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫:

–õ–∏–±–æ —Å–æ–∑–¥–∞–Ω–∏—é –≤—Ç–æ—Ä–æ–≥–æ Excel-—Ñ–∞–π–ª–∞ (–µ—Å–ª–∏ –ø–µ—Ä–≤–∞—è —Å–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å, –∞ –≤—Ç–æ—Ä–∞—è –Ω–∞—á–∞–ª–∞—Å—å).
–õ–∏–±–æ –ø—É—Ç–∞–Ω–∏—Ü–µ –≤ –¥–∞–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–∏, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –≤—Ç–æ—Ä–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –¥–æ–±–∞–≤—è—Ç—Å—è –≤ —Ç—É –∂–µ —Å–µ—Å—Å–∏—é.




–ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ –≤ multishot:

–í —Ä–µ–∂–∏–º–µ multishot –Ω–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤, —á—Ç–æ –ø—Ä–∏–≤–µ–ª–æ –∫ –ø—Ä–æ–±–ª–µ–º–µ —Å 630 —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏. –≠—Ç–æ –≤—ã–∑–≤–∞–ª–æ –æ—à–∏–±–∫–∏ 429 –æ—Ç Warframe Market –∏ Telegram API.
–ï—Å–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å —Å–ª–∏—à–∫–æ–º –∂–µ—Å—Ç–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–¥–∏–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç –∑–∞ —Ä–∞–∑ —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º), –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±—É–¥—É—Ç —Ä–∞–∑–¥—Ä–∞–∂–∞—Ç—å—Å—è –∏–∑-–∑–∞ –º–µ–¥–ª–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.


–°—Ö–æ–¥—Å—Ç–≤–æ multishot –∏ oneshot:

–†–µ–∂–∏–º multishot –ø–æ —Å—É—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç—É –∂–µ –ª–æ–≥–∏–∫—É, —á—Ç–æ –∏ oneshot, –Ω–æ —Å–µ—Å—Å–∏—è –Ω–µ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞. –≠—Ç–æ –¥–µ–ª–∞–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤ oneshot —Å–ª–æ–∂–Ω—ã–º–∏ –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –±–µ–∑ –≤–ª–∏—è–Ω–∏—è –Ω–∞ multishot.


–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –±–∞–≥–∏:

–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Ç–æ—Ä–æ–π —Å–∫—Ä–∏–Ω—à–æ—Ç –≤ oneshot, –ø–æ–∫–∞ –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", —Å–µ—Å—Å–∏—è –º–æ–∂–µ—Ç –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –∏ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –≤—Ç–æ—Ä–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –ø–æ–ø–∞–¥—É—Ç –≤ –±–∞–∑—É, –Ω–æ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π Excel-—Ñ–∞–π–ª.




–†–µ—à–µ–Ω–∏–µ
–ß—Ç–æ–±—ã —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É, –Ω—É–∂–Ω–æ:

–í —Ä–µ–∂–∏–º–µ oneshot —Å—Ç—Ä–æ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ–¥–Ω–∏–º —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–º –∑–∞ —Å–µ—Å—Å–∏—é –∏ –æ—Ç–∫–ª–æ–Ω—è—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã.
–í —Ä–µ–∂–∏–º–µ multishot –∏ edit —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤, –Ω–æ —Å –º—è–≥–∫–∏–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∏.
–î–æ–±–∞–≤–∏—Ç—å —á–µ—Ç–∫–æ–µ —Ä–∞–∑–ª–∏—á–∏–µ –º–µ–∂–¥—É —Ä–µ–∂–∏–º–∞–º–∏ –≤ –∫–æ–¥–µ, —á—Ç–æ–±—ã –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è oneshot –Ω–µ –≤–ª–∏—è–ª–∏ –Ω–∞ multishot.
–£–ª—É—á—à–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–Ω–∏–º–∞–ª, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç.

1. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤ oneshot: –æ–¥–∏–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç –∑–∞ —Å–µ—Å—Å–∏—é

–í bot.ts, –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ handlePhoto, –¥–æ–±–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫—É, —á—Ç–æ–±—ã –≤ —Ä–µ–∂–∏–º–µ oneshot –±–æ—Ç –ø—Ä–∏–Ω–∏–º–∞–ª —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ –æ—Ç–∫–ª–æ–Ω—è–ª –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏.
–í BotContext –¥–æ–±–∞–≤–∏–º —Ñ–ª–∞–≥ mode –≤ —Å–µ—Å—Å–∏—é, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º (oneshot, multishot, edit, etc.).
–ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä–≤–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –≤ oneshot —Å—Ä–∞–∑—É –∑–∞–≤–µ—Ä—à–∞–µ–º —Å–µ—Å—Å–∏—é.

–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ bot.ts:
typescriptinterface BotContext extends Context {
  session?: {
    sessionId?: string;
    waitingForExcel?: boolean;
    waitingForPriceUpdate?: boolean;
    waitingForSplitPrice?: boolean;
    splitThreshold?: number;
    mode?: 'oneshot' | 'multishot' | 'edit' | 'price_update' | 'split_excel'; // –ù–æ–≤—ã–π —Ñ–ª–∞–≥
    screenshotProcessed?: boolean; // –§–ª–∞–≥ –¥–ª—è oneshot
    screenshotCount?: number; // –î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤ multishot
  };
}

// –í –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ mode_oneshot
bot.action('mode_oneshot', async (ctx) => {
  await ctx.answerCbQuery();
  const telegramId = ctx.from?.id.toString();
  if (!telegramId) return;
  const user = await storage.getUserByTelegramId(telegramId);
  if (!user) return;

  // –û—Ç–º–µ–Ω—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é, –µ—Å–ª–∏ –µ—Å—Ç—å
  const existingSession = await storage.getActiveSessionByTelegramId(telegramId);
  if (existingSession) {
    await storage.updateSessionStatus(existingSession.id, 'cancelled');
  }

  const session = await storage.createSession({
    userId: user.id,
    telegramId,
    type: 'oneshot',
    status: 'active'
  });

  ctx.session = {
    sessionId: session.id,
    waitingForExcel: false,
    waitingForPriceUpdate: false,
    waitingForSplitPrice: false,
    mode: 'oneshot',
    screenshotProcessed: false
  };

  await ctx.editMessageText(
    'üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–¥–∏–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è Warframe.\n\n' +
    'üîô –î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.',
    Markup.inlineKeyboard([[Markup.button.callback('üîô –û—Ç–º–µ–Ω–∞', 'cancel_session')]])
  );
});

// –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º handlePhoto
async function handlePhoto(ctx: BotContext) {
  if (!ctx.session?.sessionId || !ctx.session?.mode) {
    await ctx.reply('‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start');
    return;
  }

  const sessionId = ctx.session.sessionId;

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è oneshot
  if (ctx.session.mode === 'oneshot' && ctx.session.screenshotProcessed) {
    await ctx.reply('‚ùå –í —Ä–µ–∂–∏–º–µ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç. –°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
    await completeSession(ctx);
    return;
  }

  // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª—è multishot
  const MAX_SCREENSHOTS = 50;
  const MAX_ITEMS = 1000;
  const existingItems = await storage.getItemsBySessionId(sessionId);
  if (ctx.session.mode === 'multishot') {
    ctx.session.screenshotCount = (ctx.session.screenshotCount || 0) + 1;
    if (ctx.session.screenshotCount > MAX_SCREENSHOTS) {
      await ctx.reply(`‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ (${MAX_SCREENSHOTS}). –ó–∞–≤–µ—Ä—à–∞—é —Å–µ—Å—Å–∏—é.`);
      await completeSession(ctx);
      return;
    }
    if (existingItems.length >= MAX_ITEMS) {
      await ctx.reply(`‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (${MAX_ITEMS}). –ó–∞–≤–µ—Ä—à–∞—é —Å–µ—Å—Å–∏—é.`);
      await completeSession(ctx);
      return;
    }
  }

  const photo = ctx.message?.photo;
  if (!photo) {
    await ctx.reply('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.');
    return;
  }

  try {
    await ctx.reply('üîÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...');

    // –ü–æ–ª—É—á–∞–µ–º —Å–∞–º—É—é –±–æ–ª—å—à—É—é –≤–µ—Ä—Å–∏—é —Ñ–æ—Ç–æ
    const fileId = photo[photo.length - 1].file_id;
    const file = await ctx.telegram.getFile(fileId);
    const fileUrl = `https://api.telegram.org/file/bot${process.env.TELEGRAM_BOT_TOKEN}/${file.file_path}`;
    const response = await fetch(fileUrl);
    const buffer = await response.arrayBuffer();
    const base64Image = Buffer.from(buffer).toString('base64');

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
    const extractedItems = await analyzeWarframeScreenshot(base64Image);
    if (extractedItems.length === 0) {
      await ctx.reply('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ.');
      if (ctx.session.mode === 'oneshot') {
        await completeSession(ctx);
      }
      return;
    }

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã
    const inventoryItems: InsertInventoryItem[] = [];
    for (const item of extractedItems) {
      let marketItem = null;
      try {
        marketItem = await processItemForMarket(item.name);
      } catch (error) {
        console.warn(`Could not find market data for item: ${item.name}`);
      }

      inventoryItems.push({
        sessionId,
        name: item.name,
        slug: marketItem?.slug || null,
        quantity: item.quantity || 1,
        sellPrices: marketItem?.sellPrices || [],
        buyPrices: marketItem?.buyPrices || [],
        avgSell: marketItem?.avgSell ? Math.round(marketItem.avgSell * 100) : 0,
        avgBuy: marketItem?.avgBuy ? Math.round(marketItem.avgBuy * 100) : 0,
        marketUrl: marketItem?.marketUrl || null,
        source: 'screenshot'
      });
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã
    const consolidatedItems = consolidateNewItems(inventoryItems);
    await storage.createInventoryItems(consolidatedItems);

    // –î–ª—è oneshot –∑–∞–≤–µ—Ä—à–∞–µ–º —Å–µ—Å—Å–∏—é —Å—Ä–∞–∑—É
    if (ctx.session.mode === 'oneshot') {
      ctx.session.screenshotProcessed = true;
      await completeSession(ctx);
    } else {
      // –î–ª—è multishot –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
      const keyboard = Markup.inlineKeyboard([
        [Markup.button.callback('‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é', 'complete_session')],
        [Markup.button.callback('üîô –û—Ç–º–µ–Ω–∞', 'cancel_session')]
      ]);
      await ctx.reply(
        `‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω, –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: ${consolidatedItems.length}\n` +
        `üìä –í—Å–µ–≥–æ –≤ —Å–µ—Å—Å–∏–∏: ${existingItems.length + consolidatedItems.length}\n\n` +
        'üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Å–µ—Å—Å–∏—é.',
        keyboard
      );
    }
  } catch (error) {
    console.error(`Error processing photo for session ${sessionId}:`, error);
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    if (ctx.session.mode === 'oneshot') {
      await completeSession(ctx);
    }
  }
}
–ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:

–î–æ–±–∞–≤–ª–µ–Ω —Ñ–ª–∞–≥ mode –≤ BotContext.session –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–µ–∂–∏–º–∞.
–í oneshot –¥–æ–±–∞–≤–ª–µ–Ω —Ñ–ª–∞–≥ screenshotProcessed, –∫–æ—Ç–æ—Ä—ã–π —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä–≤–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞.
–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Ç–æ—Ä–æ–π —Å–∫—Ä–∏–Ω—à–æ—Ç –≤ oneshot, –±–æ—Ç –æ—Ç–∫–ª–æ–Ω—è–µ—Ç –µ–≥–æ –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Å–µ—Å—Å–∏—é.
–í multishot —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º MAX_SCREENSHOTS –∏ MAX_ITEMS.

2. –ú—è–≥–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è multishot –∏ edit

–ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∏, –∫–∞–∫ —Å 630 —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º p-limit –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ Warframe Market –∏ Gemini API, –∫–∞–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ —Ä–∞–Ω–µ–µ.
–í warframe-market.ts:
typescriptimport pLimit from 'p-limit';
const limit = pLimit(2); // 2 –∑–∞–ø—Ä–æ—Å–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ

export async function processItemForMarket(itemName: string): Promise<WarframeMarketItem | null> {
  return limit(async () => {
    const slug = findItemSlug(itemName);
    if (!slug) {
      console.log(`Item not found in cache: ${itemName}`);
      return null;
    }
    return await getItemPrices(slug);
  });
}

–í gemini.ts:
typescriptimport pLimit from 'p-limit';
const geminiLimit = pLimit(5); // 5 –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ Gemini –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ

export async function analyzeWarframeScreenshot(base64Image: string): Promise<ExtractedItem[]> {
  return geminiLimit(async () => {
    // ... —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ ...
  });
}

–≠—Ç–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ–∑–≤–æ–ª—è—é—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –≤ multishot –±–µ–∑ –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∏ API, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–µ –ø—Ä–∏–¥–µ—Ç—Å—è –∂–¥–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–∂–¥–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –ø–æ –æ—á–µ—Ä–µ–¥–∏.

3. –ó–∞—â–∏—Ç–∞ –æ—Ç –¥–≤—É—Ö Excel-—Ñ–∞–π–ª–æ–≤ –≤ oneshot

–ü–æ—Å–∫–æ–ª—å–∫—É completeSession —Ç–µ–ø–µ—Ä—å –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä–≤–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –≤ oneshot, –≤—Ç–æ—Ä–æ–π —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ –ø–æ–ø–∞–¥–µ—Ç –≤ —Ç—É –∂–µ —Å–µ—Å—Å–∏—é.
–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Ç–æ—Ä–æ–π —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è completeSession (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑-–∑–∞ –∑–∞–¥–µ—Ä–∂–∫–∏ –≤ Telegram API), —Ñ–ª–∞–≥ screenshotProcessed –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∫—É.

4. –£–ª—É—á—à–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

–í handlePhoto –¥–æ–±–∞–≤–ª–µ–Ω—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–Ω–∏–º–∞–ª, –ø–æ—á–µ–º—É –≤—Ç–æ—Ä–æ–π —Å–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω –≤ oneshot:
typescriptif (ctx.session.mode === 'oneshot' && ctx.session.screenshotProcessed) {
  await ctx.reply('‚ùå –í —Ä–µ–∂–∏–º–µ –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Å–∫—Ä–∏–Ω—à–æ—Ç. –°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
  await completeSession(ctx);
  return;
}